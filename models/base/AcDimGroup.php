<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace d3acc\models\base;

use Yii;
use yii\db\Exception;

/**
 * This is the base-model class for table "ac_dim_group".
 *
 * @property integer $id
 * @property string $name
 *
 * @property \d3acc\models\AcDim[] $acDims
 * @property string $aliasModel
 */
abstract class AcDimGroup extends \yii\db\ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'ac_dim_group';
    }


    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['name'], 'required'],
            [['name'], 'string', 'max' => 50]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('d3acc', 'ID'),
            'name' => Yii::t('d3acc', 'Name'),
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeHints()
    {
        return array_merge(parent::attributeHints(), [
            'name' => Yii::t('d3acc', 'Name'),
        ]);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getAcDims()
    {
        return $this->hasMany(\d3acc\models\AcDim::className(), ['group_id' => 'id']);
    }


    /**
     * @return \d3acc\models\AcDim     */
    public function newAcDims()
    {
        if ($this->getIsNewRecord()){
            throw new Exception('Can not create new related record for new record!');
        }
        $model = new \d3acc\models\AcDim();
        $model->group_id = $this->id;
        return $model;
    }



    public function saveOrException($runValidation = true, $attributeNames = null)
    {
        if(!parent::save($runValidation, $attributeNames)){
            throw new Exception(json_encode($this->getErrors()));
        }
    }
}
